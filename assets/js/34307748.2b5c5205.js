"use strict";(self.webpackChunkrobo_control_web_socket=self.webpackChunkrobo_control_web_socket||[]).push([[350],{7806:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>_,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>f});var o=r(4848),t=r(8453);const s={sidebar_position:1},i="Servo.py",l={id:"python-files/servo_py",title:"Servo.py",description:"",source:"@site/docs/python-files/servo_py.md",sourceDirName:"python-files",slug:"/python-files/servo_py",permalink:"/RoboControl_WebSocket/docs/python-files/servo_py",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-files/servo_py.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Python Files",permalink:"/RoboControl_WebSocket/docs/category/python-files"},next:{title:"C Files",permalink:"/RoboControl_WebSocket/docs/category/c-files"}},_={},f=[];function a(e){const n={code:"code",h1:"h1",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"servopy",children:"Servo.py"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="servo.py" showLineNumbers',children:'import paho.mqtt.client as mqtt\r\nfrom tkinter import *\r\nimport random\r\nimport time\r\n\r\nusername= "username"\r\npassword = "pass"\r\n\r\n\r\n\r\n\r\nmqttc = mqtt.Client("Python Client")\r\n\r\nmqttc.username_pw_set(username, password)\r\nmqttc.connect(host="192.168.178.11", port=1883)\r\n\r\n\r\nclass Servo():\r\n    def __init__(self, mqtt_client, client_name):\r\n        self.mqtt= mqtt_client\r\n        self.client_name = client_name\r\n\r\n    def on(self):\r\n        self.mqtt.publish(f"{self.client_name}/Movement", "ON")\r\n\r\n    def off(self):\r\n        self.mqtt.publish(f"{self.client_name}/Movement", "OFF")\r\n\r\n    def pos(self, position : int):\r\n        if position <= 180 and position >= 0:\r\n            self.mqtt.publish(f"{self.client_name}/Pos", position)\r\n\r\n\r\n    def pos_Servo(self, position : int, Servo : str):\r\n        if position <= 180 and position >= 0:\r\n            self.mqtt.publish(f"{self.client_name}/{Servo}/Pos", position)\r\n\r\n    def move_right_eye(self):\r\n\r\n        for i in range(0, 20):\r\n            self.mqtt.publish(f"{self.client_name}/Servo1/Pos", random.randint(30,130))\r\n            self.mqtt.publish(f"{self.client_name}/Servo2/Pos", random.randint(80,140))\r\n\r\n            self.mqtt.publish(f"{self.client_name}/Servo3/Pos", random.randint(70,170))\r\n            self.mqtt.publish(f"{self.client_name}/Servo4/Pos", random.randint(25,75))\r\n            self.mqtt.publish(f"{self.client_name}/Servo5/Pos", random.randint(45,135))\r\n            self.mqtt.publish(f"{self.client_name}/Servo6/Pos", random.randint(45,135))\r\n            self.mqtt.publish(f"{self.client_name}/Servo7/Pos", random.randint(10,180))\r\n            time.sleep(2)\r\n\r\n        # for i in range(0, 10):\r\n        #     self.mqtt.publish(f"{self.client_name}/Servo3/Pos", 0)\r\n        #     self.mqtt.publish(f"{self.client_name}/Servo4/Pos", 30)\r\n        #     time.sleep(0.5)\r\n        #     self.mqtt.publish(f"{self.client_name}/Servo3/Pos", 50)\r\n        #     self.mqtt.publish(f"{self.client_name}/Servo4/Pos", 180)\r\n        #     time.sleep(0.5)\r\n\r\n\r\nservo = Servo(mqtt_client=mqttc,client_name="Robo")\r\n\r\n\r\nclass MyFrame(Frame):\r\n    def __init__(self, master=None):\r\n        self.counter = 0\r\n        #Frame erzeugen und anzeigen\r\n        super().__init__(master)\r\n        self.grid()\r\n\r\n        self.createWidgets()\r\n\r\n\r\n    def createWidgets(self):\r\n\r\n        #Beispiel Button\r\n        self.lbl_Servo = Label(self,text="Servo Control")\r\n        self.lbl_Servo.grid(row=0,column=0,sticky=EW, columnspan=2, pady=5)\r\n\r\n        self.btn_ON = Button(self,text="ON",command=servo.on,bg="#ffdddd")\r\n        self.btn_ON.grid(row=1,column=0,sticky=EW)\r\n\r\n        self.btn_OFF = Button(self,text="OFF",command=servo.off,bg="#ffdddd")\r\n        self.btn_OFF.grid(row=1,column=1,sticky=EW)\r\n\r\n        self.btn_move_right_eye = Button(self,text="Move Right Eye",command=servo.move_right_eye,bg="#ffdddd")\r\n        self.btn_move_right_eye.grid(row=7,column=0,sticky=EW)\r\n\r\n        self.lbl_Position_Servo_1 = Label(self,text="Position Servo 1:")\r\n        self.lbl_Position_Servo_1.grid(row=2,column=0,sticky=EW, pady=5)\r\n\r\n        self.lbl_Position_Servo_2 = Label(self,text="Position Servo 2:")\r\n        self.lbl_Position_Servo_2.grid(row=3,column=0,sticky=EW, pady=5)\r\n\r\n        self.lbl_Position_Servo_3 = Label(self,text="Position Servo 3:")\r\n        self.lbl_Position_Servo_3.grid(row=4,column=0,sticky=EW, pady=5)\r\n\r\n        self.lbl_Position_Servo_4 = Label(self,text="Position Servo 4:")\r\n        self.lbl_Position_Servo_4.grid(row=5,column=0,sticky=EW, pady=5)\r\n\r\n\r\n        self.Entry_publishVar_Servo_1 = StringVar()\r\n        self.Entry_publish_Servo_1 = Entry(self, textvariable = self.Entry_publishVar_Servo_1)\r\n        self.Entry_publish_Servo_1.grid(row=2,column=1,sticky=EW, columnspan=2, padx=1, pady=5)\r\n        self.Entry_publish_Servo_1.bind(\'<Key>\', self.publish_position_Servo_1)\r\n\r\n        self.Entry_publishVar_Servo_2 = StringVar()\r\n        self.Entry_publish_Servo_2 = Entry(self, textvariable = self.Entry_publishVar_Servo_2)\r\n        self.Entry_publish_Servo_2.grid(row=3,column=1,sticky=EW, columnspan=2, padx=1, pady=5)\r\n        self.Entry_publish_Servo_2.bind(\'<Key>\', self.publish_position_Servo_2)\r\n\r\n        self.Entry_publishVar_Servo_3 = StringVar()\r\n        self.Entry_publish_Servo_3 = Entry(self, textvariable = self.Entry_publishVar_Servo_3)\r\n        self.Entry_publish_Servo_3.grid(row=4,column=1,sticky=EW, columnspan=2, padx=1, pady=5)\r\n        self.Entry_publish_Servo_3.bind(\'<Key>\', self.publish_position_Servo_3)\r\n\r\n        self.Entry_publishVar_Servo_4 = StringVar()\r\n        self.Entry_publish_Servo_4 = Entry(self, textvariable = self.Entry_publishVar_Servo_4)\r\n        self.Entry_publish_Servo_4.grid(row=5,column=1,sticky=EW, columnspan=2, padx=1, pady=5)\r\n        self.Entry_publish_Servo_4.bind(\'<Key>\', self.publish_position_Servo_4)\r\n\r\n\r\n\r\n        self.Scale_Pos_Var = DoubleVar()\r\n        self.Scale_Pos = Scale(self, variable=self.Scale_Pos_Var, from_=0, to_=180, orient= HORIZONTAL, length=200)\r\n        self.Scale_Pos.grid(row=6,column=0,sticky=EW, columnspan=2, padx=1, pady=5)\r\n        self.Scale_Pos.bind("<B1-Motion>", self.scale_motion)\r\n\r\n\r\n    def publish_position_Servo_1(self, event):\r\n        if event.keysym == "Return":\r\n            position = int(self.Entry_publish_Servo_1.get())\r\n            print(position)\r\n            servo.pos_Servo(position, "Servo1")\r\n            self.Entry_publishVar_Servo_1.set("")\r\n\r\n\r\n    def publish_position_Servo_2(self, event):\r\n        if event.keysym == "Return":\r\n            position = int(self.Entry_publish_Servo_2.get())\r\n            print(position)\r\n            servo.pos_Servo(position, "Servo2")\r\n            self.Entry_publishVar_Servo_2.set("")\r\n\r\n\r\n    def publish_position_Servo_3(self, event):\r\n        if event.keysym == "Return":\r\n            position = int(self.Entry_publish_Servo_3.get())\r\n            print(position)\r\n            servo.pos_Servo(position, "Servo3")\r\n            self.Entry_publishVar_Servo_3.set("")\r\n\r\n\r\n    def publish_position_Servo_4(self, event):\r\n        if event.keysym == "Return":\r\n            position = int(self.Entry_publish_Servo_4.get())\r\n            print(position)\r\n            servo.pos_Servo(position, "Servo4")\r\n            self.Entry_publishVar_Servo_4.set("")\r\n\r\n\r\n    def scale_motion(self, event):\r\n        servo.pos(int(self.Scale_Pos.get()))\r\n\r\n\r\n\r\n\r\n#Fenster erzeugen\r\nroot = Tk()\r\nroot.title("Servo")\r\n\r\n\r\n#MyFrame erzeugen\r\nrahmen = MyFrame(root)\r\nroot.mainloop()\r\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var o=r(6540);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);