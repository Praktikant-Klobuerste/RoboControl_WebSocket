"use strict";(self.webpackChunkrobo_control_web_socket=self.webpackChunkrobo_control_web_socket||[]).push([[106],{6170:(n,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var e=r(4848),s=r(8453);const a={sidebar_position:1},i="html.h",l={id:"web -files/html_h",title:"html.h",description:"head",source:"@site/docs/02_web -files/html_h.md",sourceDirName:"02_web -files",slug:"/web -files/html_h",permalink:"/RoboControl_WebSocket/docs/web -files/html_h",draft:!1,unlisted:!1,editUrl:"https://github.com/Praktikant-Klobuerste/RoboControl_WebSocket/tree/dev/docusaurus/RoboControl_WebSocket/docs/02_web -files/html_h.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Web Files as C Files",permalink:"/RoboControl_WebSocket/docs/category/web-files-as-c-files"},next:{title:"settings_html.h",permalink:"/RoboControl_WebSocket/docs/web -files/settings_html_h"}},o={},d=[{value:"head",id:"head",level:2},{value:"body",id:"body",level:2}];function c(n){const t={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,s.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"htmlh",children:"html.h"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-c",children:'const char index_html[] PROGMEM = R"rawliteral(\r\n   //html - file\r\n  )rawliteral";\n'})}),"\n",(0,e.jsx)(t.h2,{id:"head",children:"head"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Robo - Control</title>\r\n    <link\r\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"\r\n      rel="stylesheet"\r\n      integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"\r\n      crossorigin="anonymous"\r\n    />\r\n    <meta charset="UTF-8" />\r\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\r\n    \x3c!-- <link rel="icon" type="image/png" href="favicon.png"> --\x3e\r\n    <link rel="stylesheet" href="styles.css" />\r\n  </head>\r\n</html>\n'})}),"\n",(0,e.jsx)(t.h2,{id:"body",children:"body"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-html",children:'<body>\r\n  <nav\r\n    class="navbar bg-dark border-bottom border-bottom-dark"\r\n    data-bs-theme="dark"\r\n  >\r\n    <h1 class="title mx-3 my-2">Robo - Control</h1>\r\n    <ul class="navbar-nav mx-4 topnav">\r\n      \x3c!-- Settings Modal button --\x3e\r\n      <li class="nav-item">\r\n        <a\r\n          class="btn btn-outline-light"\r\n          id="btnSettings"\r\n          href="settings"\r\n          role="button"\r\n          >Settings</a\r\n        >\r\n      </li>\r\n      <li class="nav-item">\r\n        <button\r\n          id="btnPower"\r\n          class="btn btn-warning"\r\n          onclick="togglePower(this)"\r\n        >\r\n          Power\r\n        </button>\r\n      </li>\r\n      <li class="nav-item">\r\n        <button\r\n          class="btn btn-outline-light"\r\n          type="button"\r\n          data-bs-toggle="offcanvas"\r\n          data-bs-target="#offcanvasWithBothOptions"\r\n          aria-controls="offcanvasWithBothOptions"\r\n        >\r\n          \ud83c\udf88\r\n        </button>\r\n      </li>\r\n      \x3c!-- Modal button --\x3e\r\n      <li class="nav-item">\r\n        <button\r\n          id="btnReset"\r\n          class="btn btn-outline-danger"\r\n          data-bs-toggle="modal"\r\n          data-bs-target="#modalReset"\r\n        >\r\n          Restart\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  \x3c!-- offcanvas --\x3e\r\n  <section\r\n    class="offcanvas offcanvas-start text-bg-dark"\r\n    data-bs-scroll="true"\r\n    tabindex="-1"\r\n    id="offcanvasWithBothOptions"\r\n    aria-labelledby="offcanvasWithBothOptionsLabel"\r\n  >\r\n    <div class="offcanvas-header">\r\n      <h3 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">\r\n        Animationen\r\n      </h3>\r\n      <button\r\n        type="button"\r\n        class="btn-close btn-close-white"\r\n        data-bs-dismiss="offcanvas"\r\n        aria-label="Close"\r\n      ></button>\r\n    </div>\r\n    <div class="offcanvas-body">\r\n      <div>\r\n        <button\r\n          id="btnAnimation1"\r\n          class="btn btn-secondary btn-lg btn-animation"\r\n          onclick="startAnimation(this)"\r\n          data-bs-toggle="tooltip"\r\n          data-bs-placement="right"\r\n          data-bs-title="Start Animation"\r\n        >\r\n          Eye\r\n        </button>\r\n        <button\r\n          id="btnAnimation2"\r\n          class="btn btn-secondary btn-lg btn-animation"\r\n          onclick="startAnimation(this)"\r\n          data-bs-toggle="tooltip"\r\n          data-bs-placement="right"\r\n          data-bs-title="Start Animation"\r\n        >\r\n          Head\r\n        </button>\r\n        <button\r\n          id="btnAnimation3"\r\n          class="btn btn-secondary btn-lg btn-animation"\r\n          onclick="startAnimation(this)"\r\n          data-bs-toggle="tooltip"\r\n          data-bs-placement="right"\r\n          data-bs-title="Start Animation"\r\n        >\r\n          Confuse\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  \x3c!-- Modal Reset Robot--\x3e\r\n  <section\r\n    class="modal fade"\r\n    id="modalReset"\r\n    data-bs-backdrop="static"\r\n    data-bs-keyboard="false"\r\n    tabindex="-1"\r\n    aria-labelledby="modalResetLabel"\r\n    aria-hidden="true"\r\n  >\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <h1 class="modal-title fs-5" id="modalResetLabel">Restart Robo</h1>\r\n          <button\r\n            type="button"\r\n            class="btn-close"\r\n            data-bs-dismiss="modal"\r\n            aria-label="Close"\r\n          ></button>\r\n        </div>\r\n        <div class="modal-body" id="modalResetBody">\r\n          <p class="model-paragraph">You are about to restart the Robo!</p>\r\n          <p class="model-paragraph">Axis will go to initial position.</p>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button\r\n            class="btn btn-delete"\r\n            type="button"\r\n            data-bs-toggle="tooltip"\r\n            data-bs-placement="bottom"\r\n            onclick="startReset(this)"\r\n            data-bs-title="Are you sure?"\r\n          >\r\n            Restart\r\n          </button>\r\n          <button\r\n            type="button"\r\n            class="btn btn-outline-dark"\r\n            data-bs-dismiss="modal"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class="content">\r\n    <div class="card-grid">\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 1</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider1"\r\n            min="60"\r\n            max="150"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue1"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 2</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider2"\r\n            min="60"\r\n            max="105"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue2"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 3</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider3"\r\n            min="50"\r\n            max="140"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue3"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 4</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider4"\r\n            min="120"\r\n            max="170"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue4"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 5</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider5"\r\n            min="0"\r\n            max="180"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue5"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 6</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider6"\r\n            min="0"\r\n            max="180"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue6"></span></p>\r\n      </div>\r\n      <div class="card-element">\r\n        <p class="card-title">Servo 7</p>\r\n        <p class="switch">\r\n          <input\r\n            type="range"\r\n            onchange="updateSliderPWM(this)"\r\n            id="slider7"\r\n            min="10"\r\n            max="180"\r\n            step="1"\r\n            value="0"\r\n            class="slider"\r\n          />\r\n        </p>\r\n        <p class="state">Angle: <span id="sliderValue7"></span></p>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <script src="script.js"><\/script>\r\n  <script\r\n    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"\r\n    integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"\r\n    crossorigin="anonymous"\r\n  ><\/script>\r\n  <script>\r\n    const tooltipTriggerList = document.querySelectorAll(\r\n      \'[data-bs-toggle="tooltip"]\'\r\n    );\r\n    const tooltipList = [...tooltipTriggerList].map(\r\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\r\n    );\r\n  <\/script>\r\n</body>\r\n</html>\n'})})]})}function p(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(c,{...n})}):c(n)}},8453:(n,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var e=r(6540);const s={},a=e.createContext(s);function i(n){const t=e.useContext(a);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function l(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),e.createElement(a.Provider,{value:t},n.children)}}}]);